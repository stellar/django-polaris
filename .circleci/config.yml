version: 2.1
orbs:
  heroku: circleci/heroku@1.0.1
executors:
  my-executor:
    environment:
      IMAGE_NAME: stellar/test-anchor
      PIPENV_VENV_IN_PROJECT: true
    docker:
      - image: circleci/python:3.7.3
jobs:
  test:
    executor: my-executor
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
      - restore_cache:
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          command: |
            sudo pip install pipenv
            pipenv install --dev
      - save_cache:
          # cache Python dependencies using checksum of Pipfile as the cache-key
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.7/site-packages"
      - run:
          command: |
            cp polaris/.env.example polaris/.env
            pipenv run pytest --cov -c polaris/pytest.ini
            pipenv run codecov
            pipenv --rm
      - store_test_results:
          # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: test-results
      - store_artifacts:
          # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: test-results
          destination: tr1
  publish_build:
    executor: my-executor
    steps:
      - checkout
      - setup_remote_docker
      - run: docker build -t $IMAGE_NAME:latest .
      - run:
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME:latest
workflows:
  version: 2
  test:
    jobs:
      - test
  build_deploy_publish:
    jobs:
      - test:
          filters:
            branches:
              only: master
      - publish_build:
          requires:
            - test
          filters:
            branches:
              only: master
      - heroku/deploy-via-git:
          requires:
            - publish_build
          filters:
            branches:
              only: master
