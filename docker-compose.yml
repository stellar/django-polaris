services:
  db:
    build: .
    volumes:
      - .:/code
    command: poetry run python manage.py migrate
  server:
    container_name: server
    build: .
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    command: poetry run watchmedo auto-restart --recursive --pattern="*.py;*.env;*.html" --directory="." python manage.py runserver -- --nostatic 0.0.0.0:8000
    depends_on:
      db:
        condition: service_completed_successfully
  watch_transactions:
    container_name: watch_transactions
    network_mode: host
    build: .
    volumes:
      - .:/code
    depends_on:
      db:
        condition: service_completed_successfully
    command: poetry run watchmedo auto-restart --recursive --pattern="*.py;*.env" --directory="." python manage.py watch_transactions
  process_pending_deposits:
    container_name: process_pending_deposits
    network_mode: host
    build: .
    volumes:
      - .:/code
    depends_on:
      db:
        condition: service_completed_successfully
    command: poetry run watchmedo auto-restart --recursive --pattern="*.py;*.env" --directory="." python manage.py process_pending_deposits
  poll_outgoing_transactions:
    container_name: poll_outgoing_transactions
    network_mode: host
    build: .
    volumes:
      - .:/code
    depends_on:
      db:
        condition: service_completed_successfully
    command: poetry run watchmedo auto-restart --recursive --pattern="*.py;*.env" --directory="." python manage.py poll_outgoing_transactions -- --loop
  execute_outgoing_transactions:
    container_name: execute_outgoing_transactions
    network_mode: host
    build: .
    volumes:
      - .:/code
    depends_on:
      db:
        condition: service_completed_successfully
    command: poetry run watchmedo auto-restart --recursive --pattern="*.py;*.env" --directory="." python manage.py execute_outgoing_transactions -- --loop
